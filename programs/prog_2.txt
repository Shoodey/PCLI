+0 000 000 000          const 0
+0 000 000 001          value = 1 used to increment
+0 000 000 000          index
+0 000 000 000          tmp
+0 000 000 000          nb_elements
+0 000 000 000          index (arrray 1)
+0 000 000 000          nb_elements (array 1)
+0 000 000 000          sum (array 1)
+0 000 000 000          avg  (array 1)
+0 000 000 000          array 1 start
+0 000 000 000          ----
+0 000 000 000          ----
+0 000 000 000          ----
+0 000 000 000          ----
+0 000 000 000          we used 10 empty values for array 1
+0 000 000 000          ----
+0 000 000 000          ----
+0 000 000 000          ----
+0 000 000 000          ----
+0 000 000 000          index (array 2)
+0 000 000 000          nb_elements  (array 2)
+0 000 000 000          sum  (array 2)
+0 000 000 000          avg (array 2)
+0 000 000 000          array 2 start (following values will be initialized through the code)
+9 999 999 999
+8 000 000 004 (000) read nb elts
+8 000 000 003 (001) read elt
+5 003 000 006 (002) if > 0 jmp
-6 003 023 019 (003) add elt to neg array
+1 001 019 019 (004) inc neg index
-5 003 000 008 (005) if < 0
-6 003 009 005 (006) ad elt to pos array
+1 001 005 005 (007) inc pos index
+7 002 004 001 (008) loop until read all numbers
+0 005 000 006 (009) nb_elts 1 = index 1
+0 000 000 005 (010) reset index 1
+6 009 005 003 (011) put index 1 to tmp
+1 007 003 007 (012) sum += tmp
+7 005 006 011 (013) loop for all pos
-2 007 006 008 (014) avg = sum/nb_elts 1
+0 019 000 020 (015) nb_elts 2 = index 2
+0 000 000 019 (016) reset index 2
+6 023 019 003 (017) put index 2 to tmp
+1 021 003 021 (018) sum += tmp
+7 019 020 017 (019) loop for all neg
-2 021 020 022 (020) avg = sum/nb_elts 2
-8 022 000 000
-8 008 000 000
+9 000 000 000
+9 999 999 999
+0 000 000 010